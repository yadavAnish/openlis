package us.mn.state.health.lims.sample.action;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import us.mn.state.health.lims.common.action.BaseAction;
import us.mn.state.health.lims.common.action.BaseActionForm;
import us.mn.state.health.lims.common.action.IActionConstants;
import us.mn.state.health.lims.person.valueholder.Person;

import net.sf.jasperreports.compilers.*;
import net.sf.jasperreports.engine.*;

/**
 * @author diane benz
 * 
 * To change this generated comment edit the template variable "typecomment":
 * Window>Preferences>Java>Templates. To enable and disable the creation of type
 * comments go to Window>Preferences>Java>Code Generation.
 */
public class HumanSampleOneReportAction extends BaseAction {

//	basic List - it will serve as our dataSource later on
	private List myList;

	/*
	 * (non-Javadoc)
	 *
	 * @see com.opensymphony.xwork.ActionSupport#execute()
	 */
	protected ActionForward performAction(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {

		String forward = "success";
		request.setAttribute(IActionConstants.ALLOW_EDITS_KEY, "true");

		BaseActionForm dynaForm = (BaseActionForm) form;

		// initialize the form
		dynaForm.initialize(mapping);

		// create some imaginary persons
		//Person p1 = new Person(new Long(1), "Patrick", "Lightbuddie");
		//Person p2 = new Person(new Long(2), "Jason", "Carrora");
		//Person p3 = new Person(new Long(3), "Alexandru", "Papesco");
		//Person p4 = new Person(new Long(4), "Jay", "Boss");

		Person p1 = new Person();
		p1.setId("1");
		Person p2 = new Person();
		p2.setId("2");
		Person p3 = new Person();
		p3.setId("3");
		Person p4 = new Person();
		p4.setId("4");
		/*
		 * store everything in a list - normally, this should be coming from a
		 * database but for the sake of simplicity, I left that out
		 */
		myList = new ArrayList();
		myList.add(p1);
		myList.add(p2);
		myList.add(p3);
		myList.add(p4);

		/*
		 * Here we compile our xml jasper template to a jasper file.
		 * Note: this isn't exactly considered 'good practice'.
		 * You should either use precompiled jasper files (.jasper) or provide some kind of check
		 * to make sure you're not compiling the file on every request.
		 * If you don't have to compile the report, you just setup your data source (eg. a List)
		 */
		try {
			JRGroovyCompiler(
					"WW_WEBAPP/jasper/our_jasper_template.jrxml",
					"WW_WEBAPP/jasper/our_compiled_template.jasper");
		} catch (Exception e) {
			e.printStackTrace();
			forward = "fail";
		}
		//if all goes well ..
		return mapping.findForward(forward);
	}

	/**
	 * @return Returns the myList.
	 */
	public List getMyList() {
		return myList;
	}

	
	



	protected String getPageTitleKey() {
		return "human.sample.one.edit.title";
	}

	protected String getPageSubtitleKey() {
		return "human.sample.one.edit.title";
	}

}
